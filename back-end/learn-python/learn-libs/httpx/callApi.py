import httpx
from typing import Optional, Dict, Any, Literal

# H√†m g·ªçi API chung v·ªõi method v√† URL t√πy ch·ªânh
async def call_api(
    method: Literal['GET', 'POST', 'PUT', 'DELETE'], 
    url: str, 
    params: Optional[Dict[str, Any]] = None, 
    headers: Optional[Dict[str, str]] = None, 
    json: Optional[Dict[str, Any]] = None
) -> dict:
    """
    H√†m g·ªçi API chung v·ªõi c√°c method kh√°c nhau: GET, POST, PUT, DELETE.
    
    :param method: Method HTTP (GET, POST, PUT, DELETE)
    :param url: URL c·ªßa API c·∫ßn g·ªçi
    :param params: Tham s·ªë URL (t√πy ch·ªçn)
    :param headers: Th√¥ng tin header (t√πy ch·ªçn)
    :param json: D·ªØ li·ªáu JSON cho body (t√πy ch·ªçn)
    
    :return: K·∫øt qu·∫£ tr·∫£ v·ªÅ t·ª´ API d∆∞·ªõi d·∫°ng dict
    """
    async with httpx.AsyncClient() as client:
        response = await client.request(
            method, 
            url, 
            params=params, 
            headers=headers, 
            json=json
        )
        # Ki·ªÉm tra n·∫øu status code kh√¥ng ph·∫£i 200
        response.raise_for_status()
        return response.json()  # Tr·∫£ v·ªÅ k·∫øt qu·∫£ d∆∞·ªõi d·∫°ng dict

# H√†m g·ªçi API POST v·ªõi body l√† JSON v√† API Key tr√™n header
async def call_api_post_with_json(
    url: str, 
    json_body: Dict[str, Any], 
    api_key: str
) -> dict:
    """
    H√†m g·ªçi API POST v·ªõi body l√† JSON v√† API Key ƒë∆∞·ª£c th√™m v√†o header.
    
    :param url: URL c·ªßa API c·∫ßn g·ªçi
    :param json_body: D·ªØ li·ªáu JSON c·∫ßn g·ª≠i trong body c·ªßa POST request
    :param api_key: API Key c·∫ßn g·ª≠i trong header
    
    :return: K·∫øt qu·∫£ tr·∫£ v·ªÅ t·ª´ API d∆∞·ªõi d·∫°ng dict
    """
    headers = {
        "Authorization": f"Bearer {api_key}",
        "Content-Type": "application/json; charset=UTF-8",
    }
    
    # G·ªçi API POST th√¥ng qua h√†m call_api
    return await call_api(
        method="POST",
        url=url,
        headers=headers,
        json=json_body
    )

async def main():
    try:
        api_url = "https://jsonplaceholder.typicode.com/posts"
        api_key = "your-api-key"
        
        # D·ªØ li·ªáu JSON b·∫°n mu·ªën g·ª≠i trong POST request
        json_data = {
            'title': 'foo',
            'body': 'bar',
            'userId': 2,
        }

        resp2 = await call_api('GET', api_url, params={'userId': 3})
        print("üêç File: httpx/callApi.py | Line: 80 | undefined ~ resp2",resp2)
        
        # G·ªçi API POST
        resp1 = await call_api_post_with_json(api_url, json_data, api_key)
        print("üêç File: httpx/callApi.py | Line: 77 | undefined ~ resp1",resp1)


        
    except Exception as e:
        print(e)

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
